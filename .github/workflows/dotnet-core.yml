name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  package_feed: "https://nuget.pkg.github.com/vb2ae/index.json"
  nuget_folder: "\\packages"

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test OpenWeatherMap.Standard.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '30 80'

    - name: Pack Nuget
      run: dotnet pack OpenWeatherMap.Standard/OpenWeatherMap.Standard.csproj --output ${{env.nuget_folder}} /p:Version=3.0.${{ github.run_attempt }} --configuration Release
    - name: publish Nuget Packages to GitHub
      run: dotnet nuget push packages/OpenWeatherMap.Standard.3.0.0.nupkg --source ${{vars.NUGET_FEED}} --api-key ${{secrets.NUGET_PACKAGE_UPLOAD}} --skip-duplicate
      if: github.event_name != 'pull_request'
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: published_nuget
        path: ${{env.nuget_folder}}

